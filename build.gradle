import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.github.samueltbrown:gradle-cucumber-plugin:0.8"

        // if you use the version of cucumber-jvm that the plugin was built with
        classpath "info.cukes:cucumber-core:1.2.2"
    }
}

plugins {
    id 'com.craigburke.karma' version '1.4.3'
    id "org.roboscratch.robot" version "0.1.1"
}

ext {
    groovyVersion = '2.4.5'
    gebVersion = '1.1.1'
    seleniumVersion = '2.53.1'
    cucumberJvmVersion = '1.2.4'
    chromeDriverVersion = '2.24'
    phantomJsVersion = '1.9.8'

    ciBuild = System.getenv('SNAP_CI')
}

apply plugin: "groovy"
apply plugin: "com.github.samueltbrown.cucumber"
apply plugin: 'java'
apply plugin: 'war'
apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'
apply from: "gradle/idea/idea.gradle"
apply from: "gradle/osSpecificDownloads.gradle"

group = 'com.odde'
version = '0.0.1-SNAPSHOT'
description = """massive_mailer"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
war.baseName = 'massive_mailer'


configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}


repositories {
    jcenter()
}

gretty {
    httpPort = 8070
}

karma {
    basePath = '../src/main/'
    colors = true
    profile('default'){
        libraryBases = ['webapp/resources/lib/**/']
        libraryFiles = ['jquery.js', 'bootstrap.js'] // <1>
        sourceBases = ['webapp/resources/js/']        
        sourceFiles = ['**/*.js'] // <2>        
        testBases = ['../test/javascript/']        
        testFiles = ['**/*Test.js'] // <3>        
    }
    browsers = ['PhantomJS']
    frameworks = ['jasmine']
}

cucumber {
    formats = [
            'pretty', // prints nice format out to the console
            'html:build/reports/cucumber', // html
            'junit:build/cucumber.xml' // junit format for integration with CI tool etc
    ]
    // src/cucumber/resources is included automatically
    glueDirs = [
            "classpath:io.jdev.geb.cucumber.steps.groovy.en", 'classpath:steps'
    ]
}

tasks.cucumber {
    dependsOn unzipChromeDriver, unzipPhantomJs, assemble, testClasses, 'appBeforeIntegrationTest'
    finalizedBy 'appAfterIntegrationTest'

    def chromeDriverFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "chromedriver.exe" : "chromedriver"
    def phantomJsFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "phantomjs.exe" : "bin/phantomjs"

    jvmOptions.systemProperties([
            "webdriver.chrome.driver": new File(unzipChromeDriver.outputs.files.singleFile, chromeDriverFilename).absolutePath,
            "phantomjs.binary.path": new File(unzipPhantomJs.outputs.files.singleFile, phantomJsFilename).absolutePath,
            "geb.cucumber.step.packages": "pages",
            "geb.env": System.getProperty("geb.env")
    ])
}

task cucumberNow() {
    dependsOn assemble, testClasses, 'appBeforeIntegrationTest'
    finalizedBy 'appAfterIntegrationTest'
    doLast {
        appAfterIntegrationTest
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'json:build/cucumber-json-report.json', '--glue', 'gradle.cucumber', '--tags', '@now', 'src/test/features']
        }
    }
}

dependencies {

    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.5.4'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.11.2'
    compile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    compile group: 'com.google.code.gson', name: 'gson', version: '1.7.1'
    compile group: 'com.icegreen', name: 'greenmail', version: '1.4.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.springframework', name: 'spring-mock', version: '2.0.8'
    testCompile group: 'org.springframework', name: 'spring-core', version: '2.0.8'

    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile group: 'org.javalite', name: 'db-migrator-maven-plugin', version: '1.4.11'

    testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"
    testCompile "org.gebish:geb-core:$gebVersion"
    testCompile "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-server:$seleniumVersion"
    testCompile "info.cukes:cucumber-core:$cucumberJvmVersion"
    testCompile "info.cukes:cucumber-groovy:$cucumberJvmVersion"
    testCompile "info.cukes:cucumber-java:$cucumberJvmVersion"
    testCompile "info.cukes:cucumber-junit:$cucumberJvmVersion"
    testCompile "io.jdev.geb:geb-cucumber:0.3"
    compile 'org.flywaydb:flyway-core:3.2.1'
    // pick whichever drivers you want. We test against most of them here.
    // see src/test/resources/GebConfig.groovy for how to switch between them
    cucumberRuntime "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    cucumberRuntime "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    //cucumberRuntime "org.seleniumhq.selenium:selenium-phantomjs-driver:$seleniumVersion"
    // using a custom version of phantomjs driver for now as the original one does not support WebDriver > 2.43.1
    cucumberRuntime("com.codeborne:phantomjsdriver:1.2.1") {
        // phantomjs driver pulls in a different selenium version
        transitive = false
    }
    testCompile "com.github.detro.ghostdriver:phantomjsdriver:1.1.0"

}

apply from: "gradle/ci.gradle"