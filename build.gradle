import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    repositories {
        jcenter()
        maven { url 'http://repo.javalite.io' }
    }
    dependencies {
        classpath "com.github.samueltbrown:gradle-cucumber-plugin:0.8"
        classpath "info.cukes:cucumber-core:1.2.2"
        classpath group: 'org.javalite', name: 'activejdbc-gradle-plugin', version: '1.4.13-SNAPSHOT'
        classpath "com.google.code.gson:gson:2.8.0"
    }
}

plugins {
    id 'com.craigburke.karma' version '1.4.4'
    id "org.roboscratch.robot" version "0.1.1"
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

ext {
    phantomJsVersion = "1.9.8"
    groovyVersion = '2.4.5'
    gebVersion = '1.1.1'
    seleniumVersion = '3.7.1'
    cucumberJvmVersion = '1.2.4'
    chromeDriverVersion = '2.24'
    assertJVersion = "3.10.0"

    ciBuild = System.getenv('SNAP_CI')
}

apply plugin: "com.github.samueltbrown.cucumber"
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.javalite.activejdbc'
apply from: 'gradle/gretty.gradle'
apply from: "gradle/idea/idea.gradle"
apply from: "gradle/osSpecificDownloads.gradle"

group = 'com.odde'
version = '0.0.1-SNAPSHOT'
description = """massive_mailer"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
war.baseName = 'massive_mailer'


configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

repositories {
    jcenter()
    maven { url 'http://repo.javalite.io' }
}

gretty {
    httpPort = 8070
    if(project.gradle.startParameter.taskNames.any{e -> e.startsWith('cucumber')}) {
        jvmArgs = ["-Dactive_env=test"]
        httpPort = 8060
    }
}

karma {
    basePath = '../src/main/'
    colors = false
    profile('default'){
        libraryBases = ['webapp/resources/lib/**/']
        libraryFiles = ['jquery.js', 'bootstrap.js'] // <1>
        sourceBases = ['webapp/resources/js/']
        sourceFiles = ['**/*.js'] // <2>
        testBases = ['../test/javascript/']
        testFiles = ['**/*Test.js'] // <3>
    }
    browsers = ['PhantomJS']
    frameworks = ['jasmine']
}

cucumber {
    formats = [
            'pretty', // prints nice format out to the console
            'html:build/reports/cucumber', // html
            'junit:build/cucumber.xml' // junit format for integration with CI tool etc
    ]
    // src/cucumber/resources is included automatically
    glueDirs = [
            "classpath:io.jdev.geb.cucumber.steps.groovy.en", 'classpath:steps'
    ]

    tags = ['~@system', '~@slow', '~@developing', '@trigger']
}

tasks.cucumber {
    if(!Os.isFamily(Os.FAMILY_MAC)) {
        dependsOn unzipPhantomJs
    }
    dependsOn assemble, testClasses, 'appBeforeIntegrationTest'
    finalizedBy 'appAfterIntegrationTest'

    //def phantomJsFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "phantomjs.exe" : "bin/phantomjs"
    jvmOptions.systemProperties("webdriver.chrome.driver": "/usr/local/bin/chromedriver")
    jvmOptions.systemProperties([
            //"phantomjs.binary.path": Os.isFamily(Os.FAMILY_MAC) ? file("$projectDir/node_modules/phantomjs/bin/phantomjs") : new File(unzipPhantomJs.outputs.files.singleFile, phantomJsFilename).absolutePath,
            "geb.cucumber.step.packages": "steps",
            "geb.env": System.getProperty("geb.env"),
            "webdriver": "chrome", //System.getProperty("webdriver")
            "active_env": "test",
    ])
    doFirst {
        gretty {
            jvmArgs = ["-Dactive_env=test"]
            httpPort = 8060
        }
    }
}

task cucumber_trigger {
    group "verification"
    finalizedBy "cucumber"
    doFirst {
        cucumber {
            tags = ['@trigger']
        }
    }
}


task cucumber_now {
    group "verification"
    finalizedBy "cucumber"
    doFirst {
        cucumber {
            tags = ['~@system', '@now']
        }
    }
}

if('test' in project.gradle.startParameter.taskNames) {
    project.gradle.startParameter.excludedTaskNames = ['karmaRun']
}

dependencies {
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.28'
    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.5.4'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.11.2'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    compile group: 'com.google.code.gson', name: 'gson', version: '1.7.1'
    compile group: 'com.icegreen', name: 'greenmail', version: '1.4.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.springframework', name: 'spring-mock', version: '2.0.8'
    testCompile group: 'org.springframework', name: 'spring-core', version: '2.0.8'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.7.20'

    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile group: 'org.javalite', name: 'db-migrator-maven-plugin', version: '1.4.11'
    compile group: 'org.javalite', name: 'activejdbc', version: '1.4.12-SNAPSHOT'

    testCompile "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-server:$seleniumVersion"
    testCompile "info.cukes:cucumber-core:$cucumberJvmVersion"
    testCompile "info.cukes:cucumber-java:$cucumberJvmVersion"
    testCompile "info.cukes:cucumber-junit:$cucumberJvmVersion"
    testCompile "org.assertj:assertj-core:$assertJVersion"
    compile 'org.flywaydb:flyway-core:3.2.1'
    testCompile 'com.github.detro:ghostdriver:2.1.0'

    // https://mvnrepository.com/artifact/com.google.maps/google-maps-services
    compile group: "com.google.maps", name: "google-maps-services", version: "0.2.4"
}

apply from: "gradle/ci.gradle"
